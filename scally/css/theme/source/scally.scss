/**
 * Scally theme for reveal.js.
 *
 * Copyright (C) 2015 Hakim El Hattab, http://hakim.se
 */


// Default mixins and settings -----------------
@import "../template/mixins";
@import "../template/settings";
// ---------------------------------------------




/**
 *
 */
// Override theme settings (see ../template/settings.scss)
$backgroundColor: white;

$mainColor: #222;
$headingColor: #222;

$mainFontSize: 30px;
$mainFont: Lato, Ubuntu, Helvetica, sans-serif;
$headingFont: Lato, Ubuntu, Helvetica, sans-serif;
$headingTextShadow: none;
$headingLetterSpacing: normal;
$headingTextTransform: none;
$headingFontWeight: 700;
$linkColor: #bf2f44;
$linkColorHover: darken($linkColor, 10%);
$selectionBackgroundColor: lighten($linkColor, 25%);

$heading1Size: 2em;
$heading2Size: 1.5em;
$heading3Size: 1em;
$heading4Size: 1em;


/**
 * Settings.
 */

// Colours
$colour-controls: #333;

// Gradients
$colour-tropical-gradient: linear-gradient(-90deg, #f9ac0a 0%, #fd536f 50%, #bf2f44 100%);

$colour-cm-gradient: linear-gradient(-180deg, #19a9e6 0%, #72d0eb 100%);


// Theme template ------------------------------
@import "../template/theme";
// ---------------------------------------------




/**
 * Resets and overrides from `template/theme.scss`.
 */

html,
body,
.reveal {font-weight: 300 !important;}

.reveal {

  /**
   * Set line heights.
   */

  p,
  ul,
  ol,
  blockquote {line-height: 1.45;}


  /**
   * Links.
   */

  a:hover,
  a:focus {text-decoration: none;}


  /**
   * Headings.
   */

  h2 {margin-bottom: $blockMargin*2.5;}

  .h2-alt {
    font-size: 1.2em;
    font-weight: 300;
  }


  /**
   * Paragraphs.
   */

  p {margin: 40px 0;}


  /**
   * Code.
   */

  pre[class*="language-"] {
    padding: $blockMargin !important;
    max-height: 400px;
    margin-bottom: 40px !important;

    &:last-child {margin-bottom: 0 !important;}

    code[class*="language-"] {display: block !important;}
  }


  code {font-size: 0.7em !important;}

  .code-large {
    padding: 10px;
    font-size: 1em !important;
  }

  .code-tall {max-height: 500px !important;}


  /**
   * Images.
   */

  section img {
    margin: 0;
    background: none;
    border: 0;
    box-shadow: none;
  }

  a:hover img,
  a:focus img {
    background: none;
    box-shadow: none;
  }


  /**
   * iframes.
   */

  iframe {
    margin-left: auto !important;
    margin-right: auto !important;
  }


  /**
   * Blockquotes.
   */

  blockquote {
    color: #666;
    font-style: italic;
    font-weight: 100;
    text-align: left;
    margin-bottom: $blockMargin;
    border-left: 2px solid $linkColor;
    padding: 5px 0 5px 20px;

    iframe & {
      border: 0 !important;
      margin-bottom: 0 !important;
      padding: 0 !important;
    }
  }

  cite {
    display: block;
    text-align: left;

    &:before {content: "\2014";}
  }


  /**
   * Lists.
   */

  ol,
  dl,
  ul {
    display: block;
    margin-left: 0;
  }


  /**
   * Misc.
   */

  strong,
  b {font-weight: 700;}

  em {font-style: italic;}


  /**
   * Controls.
   */

  .controls {
    div {opacity: 0.3 !important;}
    div.enabled {opacity: 1 !important;}

    // Left
    div.navigate-left,
    div.navigate-left.enabled {border-right-color: $colour-controls;}

    div.navigate-left.enabled:hover,
    div.navigate-left.enabled:focus {border-right-color: lighten($colour-controls, 10%);}

    // Right
    div.navigate-right,
    div.navigate-right.enabled {border-left-color: $colour-controls;}

    div.navigate-right.enabled:hover,
    div.navigate-right.enabled:focus {border-left-color: lighten($colour-controls, 10%);}

    // Down
    div.navigate-down,
    div.navigate-down.enabled {border-top-color: $colour-controls;}

    div.navigate-down.enabled:hover,
    div.navigate-down.enabled:focus {border-top-color: lighten($colour-controls, 10%);}

    // Up
    div.navigate-up,
    div.navigate-up.enabled {border-bottom-color: $colour-controls;}

    div.navigate-up.enabled:hover,
    div.navigate-up.enabled:focus {border-bottom-color: lighten($colour-controls, 10%);}
  }


  /**
   * Progress bar.
   */

  .progress {
    height: 8px;
    background-image: $colour-tropical-gradient;

    span {background: white;}
  }


  /**
   * Backgrounds.
   */

  .backgrounds  {

    // Tropical gradient
    .tropical-gradient {background: $colour-tropical-gradient;}

    // Black
    .black-bg {background-color: #000;}

    // Campaign Monitor
    .cm {background: #00A8e8;}
  }

  .tropical-gradient,
  .cm {
    *,
    a:hover,
    a:focus {color: white;}

    a {
      transition: opacity 0.2s;
      text-decoration: underline;
    }

    a:hover,
    a:focus {
      opacity: 0.7;
      text-decoration: none;
    }
  }


  /**
   * Demo blocks.
   */

  .demo-block {border: 1px solid $linkColor;}

  .demo-block-bg {background: #eee;}


  /**
   * Utilities.
   */

  .u-text-size-small {font-size: 0.75em !important;}

  .u-text-size-large {font-size: 1.3em !important;}

  .u-text-align-center {text-align: center !important;}

  .u-text-align-left {text-align: left !important;}

  .u-text-align-right {text-align: right !important;}

  pre.language-css.u-s-m-none,
  .u-s-m-none {margin: 0 !important;}

  pre.language-css.u-s-mb-none,
  .u-s-mb-none {margin-bottom: 0 !important;}

  pre.language-css.u-s-mt-none,
  .u-s-mt-none {margin-top: 0 !important;}

  pre.language-css.u-s-mb-10,
  .u-s-mb-10 {margin-bottom: 10px !important;}

  .u-s-p-20 {padding: 20px !important;}

  .u-s-mb-20 {margin-bottom: 20px !important;}

  .u-s-mt-20 {margin-top: 20px !important;}

  .u-s-mb-40 {margin-bottom: 40px !important;}

  .u-s-mb-100 {margin-bottom: 100px !important;}

  .u-s-p-none {padding: 0 !important;}

  .u-list-plain {
    margin: 0 !important;
    list-style: none !important;
  }

  .u-list-padding > li {
    margin-bottom: 5px !important;

    &:last-child {margin-bottom: 0;}
  }

  .u-text-mono {
    font-family: Consolas, Monaco, 'Andale Mono', monospace !important;
    font-size: 0.5em !important;
    color: #666;

    code {font-size: 100% !important;}
  }

  .u-narrow-container {
    max-width: 900px !important;
    margin-left: auto !important;
    margin-right: auto !important;
  }

  .u-grey {color: #999 !important;}

  .u-position-to-the-side {
    transform: rotate(90deg);
    transform-origin: left top 0;
    display: block;
    position: absolute;
    left: -40px;
    top: 8px;
    width: 57.5%;
    text-align: center;
  }
}





/* ============================================================================
   SCALLY
   ========================================================================= */


/*! normalize.css v3.0.2 | MIT License | git.io/normalize */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */

html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: 700;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */

input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box; /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: 700;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}


/* Reset
   ========================================================================== */

/**
 * In addition to normalize.css we also apply a reset which mainly removes all
 * margins, paddings, and borders, from all elements, and applies the nice
 * `border-box` value for `box-sizing`. And a few other things.
 */
/**
 * Settings.
 */
/**
 * Remove all margins, paddings, and borders.
 *
 * N.B. the complete list of HTML5 elements
 * https://developer.mozilla.org/en/docs/Web/Guide/HTML/HTML5/HTML5_element_list
 */
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strong,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
sub,
sup,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
time,
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary,
main,
menu {
  margin: 0;
  padding: 0;
  border: 0; }

/**
 * Reset the `box-sizing` property to the more friendly `border-box` value.
 *
 * @credit
 * http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/**
 * Reset lists.
 */
ul,
ol {
  list-style-type: none; }

/**
 * Suppress the focus outline on links that cannot be accessed via a keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 *
 * N.B. it is okay to use `!important` here as we're doing it preemptively
 * i.e. you know you willalways want the rule it's applied too to take
 * precedence.
 *
 * @credit
 * https://github.com/suitcss/
 */
[tabindex="-1"]:focus {
  outline: none !important; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 0.0625rem solid; }


/* Container
   ========================================================================== */

.reveal .l-container {
  width: 92%;
  min-width: 13.75rem;
  max-width: 100rem;
  margin: 0 auto; }
  @media print {
    .l-container {
      width: auto; } }

/**
 * Modifier: full bleed.
 */
.reveal .l-container--full-bleed {
  width: auto;
  max-width: none; }

/**
 * Modifier: not centered.
 */
.reveal .l-container--not-centered {
  margin-left: 0;
  margin-right: 0; }



/* Grid
   ========================================================================== */

.reveal .l-grid {
  margin-left: -1.5rem;
  display: block;
  font-size: 0; }

  .reveal .l-grid__item {
  display: inline-block;
  padding-left: 1.5rem;
  width: 100%;
  vertical-align: top;
  font-size: 30px;
  line-height: 1.5; }

  /**
 * Modifier: gutterless.
 */
.reveal .l-grid--gutterless {
  margin-left: 0; }
  .reveal .l-grid--gutterless > .l-grid__item {
    padding-left: 0; }

/**
 * Modifier: gutter tiny.
 */
.reveal .l-grid--gutter-tiny {
  margin-left: -0.5rem; }
  .reveal .l-grid--gutter-tiny > .l-grid__item {
    padding-left: 0.5rem; }

/**
 * Modifier: gutter small.
 */
.reveal .l-grid--gutter-small {
  margin-left: -0.75rem; }
  .reveal .l-grid--gutter-small > .l-grid__item {
    padding-left: 0.75rem; }

/**
 * Modifier: gutter large.
 */
.reveal .l-grid--gutter-large {
  margin-left: -2.25rem; }
  .reveal .l-grid--gutter-large > .l-grid__item {
    padding-left: 2.25rem; }

/**
 * Modifier: gutter huge.
 */
.reveal .l-grid--gutter-huge {
  margin-left: -3rem; }
  .reveal .l-grid--gutter-huge > .l-grid__item {
    padding-left: 3rem; }

/**
 * Modifier: reversed.
 *
 * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your
 * markup will display in order 4, 3, 2, 1 on your page.
 */
.reveal .l-grid--reversed {
  direction: rtl;
  text-align: left; }
  .reveal .l-grid--reversed > .l-grid__item {
    direction: ltr;
    text-align: left; }

/**
 * Modifier: vertical align middle.
 */
.reveal .l-grid--align-middle > .l-grid__item {
  vertical-align: middle; }

/**
 * Modifier: vertical align bottom.
 */
.reveal .l-grid--align-bottom > .l-grid__item {
  vertical-align: bottom; }

/**
 * Modifier: align right.
 */
.reveal .l-grid--align-right {
  text-align: right; }
  .reveal .l-grid--align-right > .l-grid__item {
    text-align: left; }

/**
 * Modifier: align center.
 */
.reveal .l-grid--align-center {
  text-align: center; }
  .reveal .l-grid--align-center > .l-grid__item {
    text-align: left; }

/**
 * Modifier: shrink wrap.
 *
 * Make it be the width of it's content.
 */
.reveal .l-grid--shrink-wrap > .l-grid__item {
  width: auto; }


/* Side-by-side
   ========================================================================== */

/**
 * Place any two elements side-by-side, typically for an image- and text-like
 * content.
 *
 * @markup
   <div class="l-side-by-side">
     <div class="l-side-by-side__left"> ... </div>
     <div class="l-side-by-side__right"> ... </div>
   </div>
 *
 * @credit
 * http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
/**
 * Settings.
 */
/**
 * 1. So it can work on inline elements e.g. `span`.
 */
.reveal .l-side-by-side {
  display: block; }
  .l-side-by-side:after {
    content: "";
    display: table;
    clear: both; }

/**
 * Left side.
 */
.reveal .l-side-by-side__left {
  float: left;
  margin-right: 1.5rem;
  /**
   * Modifiers: gutter sizing.
   */
  /**
   * Modifiers: reversed.
   *
   * Switch the sides i.e. left becomes right and right becomes left.
   */
  /**
   * Modifier: flush.
   *
   * Remove the gutter.
   */
  /**
   * Modifier: remove.
   *
   * Turn off the side-by-side layout so the two elements stack on top of
   * each other at the palm breakpoint (or whatever you specify) and provide
   * bottom spacing between the two elements via the gutter size settings.
   *
   * Make optional as this uses a fair amount of CSS.
   *
   * N.B. we use a `max-width` media query for this which is something we
   * wouldn't usually do as we build Mobile First however this is simply the
   * most pragmatic way of accomplishing this. Also this layout module's
   * default state is side-by-side, so its stacked state is the exception,
   * rather than the rule.
   */ }
  .l-side-by-side--gutter-tiny > .l-side-by-side__left {
    margin-right: 0.5rem; }
  .l-side-by-side--gutter-small > .l-side-by-side__left {
    margin-right: 0.75rem; }
  .l-side-by-side--gutter-large > .l-side-by-side__left {
    margin-right: 2.25rem; }
  .l-side-by-side--gutter-huge > .l-side-by-side__left {
    margin-right: 3rem; }
  .l-side-by-side--reversed > .l-side-by-side__left {
    float: right;
    margin-right: 0;
    margin-left: 1.5rem; }
  .l-side-by-side--reversed.l-side-by-side--gutter-tiny > .l-side-by-side__left {
    margin-left: 0.5rem; }
  .l-side-by-side--reversed.l-side-by-side--gutter-small > .l-side-by-side__left {
    margin-left: 0.75rem; }
  .l-side-by-side--reversed.l-side-by-side--gutter-large > .l-side-by-side__left {
    margin-left: 2.25rem; }
  .l-side-by-side--reversed.l-side-by-side--gutter-huge > .l-side-by-side__left {
    margin-left: 3rem; }
  .l-side-by-side--flush > .l-side-by-side__left {
    margin-right: 0; }
  .l-side-by-side--reversed.l-side-by-side--flush > .l-side-by-side__left {
    margin-left: 0; }
  @media (max-width: 40em) {
    .reveal .l-side-by-side__left {
      /**
       * Modifiers: bottom spacing sizing.
       */
      /**
       * Modifier: flush.
       *
       * Remove the bottom spacing.
       */ }
      .l-side-by-side--remove > .l-side-by-side__left {
        float: none;
        margin-right: 0;
        margin-left: 0;
        margin-bottom: 1.5rem; }
      .l-side-by-side--remove.l-side-by-side--gutter-tiny > .l-side-by-side__left {
        margin-bottom: 0.5rem; }
      .l-side-by-side--remove.l-side-by-side--gutter-small > .l-side-by-side__left {
        margin-bottom: 0.75rem; }
      .l-side-by-side--remove.l-side-by-side--gutter-large > .l-side-by-side__left {
        margin-bottom: 2.25rem; }
      .l-side-by-side--remove.l-side-by-side--gutter-huge > .l-side-by-side__left {
        margin-bottom: 3rem; }
      .l-side-by-side--remove.l-side-by-side--flush > .l-side-by-side__left {
        margin-bottom: 0; } }

/**
 * Right side.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 */
.reveal .l-side-by-side__right {
  display: table-cell;
  width: 10000px; }


/* Side-by-side alternate
   ========================================================================== */

/**
 * This is the same as the default Side-by-side layout module however it
 * utilises `display: table[-cell];` to give us control over vertical
 * alignment.
 *
 * @markup
   <div class="l-side-by-side-alt">
     <div class="l-side-by-side-alt__left"> ... </div>
     <div class="l-side-by-side-alt__right"> ... </div>
   </div>
 *
 * @credit
 * https://github.com/inuitcss/objects.flag/blob/master/_objects.flag.scss
 */
/**
 * Settings.
 */
/**
 * 1. Allows us to control vertical alignments.
 * 2. Force to be the full width of its parent. Combined with [1], this makes
 *    the layout module behave in a quasi-`display: block;` manner.
 */
.reveal .l-side-by-side-alt {
  display: table;
  width: 100%; }

/**
 * Modifier: reversed.
 *
 * 1. Swap the rendered direction of the object.
 */
.reveal .l-side-by-side-alt--reversed {
  direction: rtl; }

/**
 * Modifier: shrink-wrap.
 *
 * Make it be the width of it's content not it's parent as per the default.
 */
.reveal .l-side-by-side-alt--shrink-wrap {
  width: auto; }

/**
 * Modifier: make linear.
 *
 * Turn off the side-by-side layout so the two elements stack on top of
 * each other at the palm breakpoint (or whatever you specify) and provide
 * bottom spacing between the two elements via the gutter size settings.
 *
 * Make optional as this uses a fair amount of CSS.
 *
 * N.B. we use a `max-width` media query for this which is something we
 * wouldn't usually do as we build Mobile First however this is simply the
 * most pragmatic way of accomplishing this. Also this layout module's default
 * state is side-by-side, so its stacked state is the exception, rather
 * than the rule.
 *
 * 1. Disable reversal of content because there is no concept of 'reversed' in
 *    a stacked layout.
 */
@media (max-width: 40em) {
  .reveal .l-side-by-side-alt--remove {
    direction: ltr; } }
/**
 * The two sides of the layout module. There should only ever be one of each.
 *
 * 1. Default to aligning content to their middles.
 */
.reveal .l-side-by-side-alt__left,
.reveal .l-side-by-side-alt__right {
  display: table-cell;
  vertical-align: middle;
  /**
   * Modifier: reversed.
   *
   * Switch the sides i.e. left becomes right and right becomes left.
   *
   * 1. Reset the rendered direction of the layout module.
   */
  /**
   * Modifiers: vertical alignments.
   */
  /**
   * Modifier: make linear.
   */ }
  .reveal .l-side-by-side-alt--reversed > .l-side-by-side-alt__left, .l-side-by-side-alt--reversed >
  .reveal .l-side-by-side-alt__right {
    direction: ltr; }
  .reveal .l-side-by-side-alt--top > .l-side-by-side-alt__left, .l-side-by-side-alt--top >
  .reveal .l-side-by-side-alt__right {
    vertical-align: top; }
  .reveal .l-side-by-side-alt--bottom > .l-side-by-side-alt__left, .l-side-by-side-alt--bottom >
  .reveal .l-side-by-side-alt__right {
    vertical-align: bottom; }
  @media (max-width: 40em) {
    .reveal .l-side-by-side-alt--remove > .l-side-by-side-alt__left, .l-side-by-side-alt--remove >
    .reveal .l-side-by-side-alt__right {
      display: block; } }

/**
 * Left side.
 */
.reveal .l-side-by-side-alt__left {
  padding-right: 1.5rem;
  /**
   * Modifiers: gutter sizing.
   */
  /**
   * Modifiers: reversed.
   *
   * 1. Reassign paddings to the correct sides.
   */
  /**
   * Modifier: flush.
   *
   * Remove the gutter.
   */
  /**
   * Modifier: make linear.
   */
  /**
   * Need to turn off responsive images otherwise it breaks.
   */ }
  .reveal .l-side-by-side-alt--gutter-tiny > .l-side-by-side-alt__left {
    padding-right: 0.5rem; }
  .reveal .l-side-by-side-alt--gutter-small > .l-side-by-side-alt__left {
    padding-right: 0.75rem; }
  .reveal .l-side-by-side-alt--gutter-large > .l-side-by-side-alt__left {
    padding-right: 2.25rem; }
  .reveal .l-side-by-side-alt--gutter-huge > .l-side-by-side-alt__left {
    padding-right: 3rem; }
  .reveal .l-side-by-side-alt--reversed > .l-side-by-side-alt__left {
    padding-right: 0;
    padding-left: 1.5rem; }
  .reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--gutter-tiny > .l-side-by-side-alt__left {
    padding-left: 0.5rem; }
  .reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--gutter-small > .l-side-by-side-alt__left {
    padding-left: 0.75rem; }
  .reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--gutter-large > .l-side-by-side-alt__left {
    padding-left: 2.25rem; }
  .reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--gutter-huge > .l-side-by-side-alt__left {
    padding-left: 3rem; }
  .reveal .l-side-by-side-alt--flush > .l-side-by-side-alt__left {
    padding-right: 0; }
  .reveal .l-side-by-side-alt--reversed.l-side-by-side-alt--flush > .l-side-by-side-alt__left {
    padding-left: 0; }
  @media (max-width: 40em) {
    .reveal .l-side-by-side-alt__left {
      /**
       * Modifiers: bottom spacing sizing.
       */
      /**
       * Modifier: flush.
       *
       * Remove the bottom spacing.
       */ }
      .reveal .l-side-by-side-alt--remove > .l-side-by-side-alt__left {
        padding-right: 0;
        padding-left: 0;
        margin-bottom: 1.5rem; }
      .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--gutter-tiny > .l-side-by-side-alt__left {
        margin-bottom: 0.5rem; }
      .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--gutter-small > .l-side-by-side-alt__left {
        margin-bottom: 0.75rem; }
      .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--gutter-large > .l-side-by-side-alt__left {
        margin-bottom: 2.25rem; }
      .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--gutter-huge > .l-side-by-side-alt__left {
        margin-bottom: 3rem; }
      .reveal .l-side-by-side-alt--remove.l-side-by-side-alt--flush > .l-side-by-side-alt__left {
        margin-bottom: 0; } }
  .reveal .l-side-by-side-alt__left > img {
    max-width: none;
    /**
     * Modifier: remove.
     *
     * Bring back responsive images for stacked version.
     */ }
    @media (max-width: 40em) {
      .reveal .l-side-by-side-alt__left > img {
        max-width: 100%; } }


/* Widths
   ========================================================================== */

/**
 * Apply different width treatments to elements. They're two different types of
 * treatments you can apply:
 *
 * - Intrinsic widths
 * - Percentage widths
 */
/**
 * Settings.
 */
/**
 * Toggle on/off certain styles and treatments.
 */
/**
 * Intrinsic widths.
 */
/**
 * Make an element shrink wrap its content.
 */
.reveal .u-width-shrink-wrap {
  display: block;
  float: left;
  width: auto; }

.reveal .u-width-shrink-wrap--right {
  float: right; }

/**
 * Make an element fill the remaining space.
 *
 * N.B. for the alternative method do not use if child elements might be wider
 * than the remaining space because in Chrome, Safari, and Firefox it results
 * in undesired layout.
 */
.reveal .u-width-fill-remaining-space {
  display: block;
  overflow: hidden;
  width: auto; }

.reveal .u-width-fill-remaining-space-alt {
  display: table-cell;
  max-width: 100%;
  width: 10000px; }

/**
 * Make an element the width of its parent.
 */
.reveal .u-width-full-bleed {
  display: block;
  width: 100%; }

/**
 * Percentage based width classes generated by the `generate-percentage-classes
 * -at-breakpoints` mixin found here: Core -> Settings -> Mixins. Each class
 * get's its value and is named after the Sass settings defined here: Core ->
 * Settings -> Widths with the addition of the utility namespace: `u-`, e.g.
 * `$one-half` = `.u-one-half`.
 *
 * All the width classes can be applied at different breakpoints with the
 * format being:
 *
 * Using a `min-width` media query (default):
 *
   .u-[setting-name]-from-[breakpoint]
 *
 * E.g.
 *
   .u-one-half-from-lap
 *
 * Using a `max-width` media query:
 *
   .u-[setting-name]-up-to-[breakpoint]
 *
 * E.g.
 *
   .u-one-third-up-to-desk
 */
.reveal .u-one-whole {
  width: 100%; }

.reveal .u-one-half {
  width: 50%; }

.reveal .u-one-third {
  width: 33.33333%; }

.reveal .u-two-thirds {
  width: 66.66667%; }

.reveal .u-one-quarter {
  width: 25%; }

.reveal .u-two-quarters {
  width: 50%; }

.reveal .u-three-quarters {
  width: 75%; }

.reveal .u-one-fifth {
  width: 20%; }

.reveal .u-two-fifths {
  width: 40%; }

.reveal .u-three-fifths {
  width: 60%; }

.reveal .u-four-fifths {
  width: 80%; }

.reveal .u-one-sixth {
  width: 16.66667%; }

.reveal .u-two-sixths {
  width: 33.33333%; }

.reveal .u-three-sixths {
  width: 50%; }

.reveal .u-four-sixths {
  width: 66.66667%; }

.reveal .u-five-sixths {
  width: 83.33333%; }

.reveal .u-one-eighth {
  width: 12.5%; }

.reveal .u-two-eighths {
  width: 25%; }

.reveal .u-three-eighths {
  width: 37.5%; }

.reveal .u-four-eighths {
  width: 50%; }

.reveal .u-five-eighths {
  width: 62.5%; }

.reveal .u-six-eighths {
  width: 75%; }

.reveal .u-seven-eighths {
  width: 87.5%; }

.reveal .u-one-tenth {
  width: 10%; }

.reveal .u-two-tenths {
  width: 20%; }

.reveal .u-three-tenths {
  width: 30%; }

.reveal .u-four-tenths {
  width: 40%; }

.reveal .u-five-tenths {
  width: 50%; }

.reveal .u-six-tenths {
  width: 60%; }

.reveal .u-seven-tenths {
  width: 70%; }

.reveal .u-eight-tenths {
  width: 80%; }

.reveal .u-nine-tenths {
  width: 90%; }

.reveal .u-one-twelfth {
  width: 8.33333%; }

.reveal .u-two-twelfths {
  width: 16.66667%; }

.reveal .u-three-twelfths {
  width: 25%; }

.reveal .u-four-twelfths {
  width: 33.33333%; }

.reveal .u-five-twelfths {
  width: 41.66667%; }

.reveal .u-six-twelfths {
  width: 50%; }

.reveal .u-seven-twelfths {
  width: 58.33333%; }

.reveal .u-eight-twelfths {
  width: 66.66667%; }

.reveal .u-nine-twelfths {
  width: 75%; }

.reveal .u-ten-twelfths {
  width: 83.33333%; }

.reveal .u-eleven-twelfths {
  width: 91.66667%; }

@media (min-width: 40.0625em) {
  .reveal .u-one-whole-from-lap {
    width: 100%; }

  .reveal .u-one-half-from-lap {
    width: 50%; }

  .reveal .u-one-third-from-lap {
    width: 33.33333%; }

  .reveal .u-two-thirds-from-lap {
    width: 66.66667%; }

  .reveal .u-one-quarter-from-lap {
    width: 25%; }

  .reveal .u-two-quarters-from-lap {
    width: 50%; }

  .reveal .u-three-quarters-from-lap {
    width: 75%; }

  .reveal .u-one-fifth-from-lap {
    width: 20%; }

  .reveal .u-two-fifths-from-lap {
    width: 40%; }

  .reveal .u-three-fifths-from-lap {
    width: 60%; }

  .reveal .u-four-fifths-from-lap {
    width: 80%; }

  .reveal .u-one-sixth-from-lap {
    width: 16.66667%; }

  .reveal .u-two-sixths-from-lap {
    width: 33.33333%; }

  .reveal .u-three-sixths-from-lap {
    width: 50%; }

  .reveal .u-four-sixths-from-lap {
    width: 66.66667%; }

  .reveal .u-five-sixths-from-lap {
    width: 83.33333%; }

  .reveal .u-one-eighth-from-lap {
    width: 12.5%; }

  .reveal .u-two-eighths-from-lap {
    width: 25%; }

  .reveal .u-three-eighths-from-lap {
    width: 37.5%; }

  .reveal .u-four-eighths-from-lap {
    width: 50%; }

  .reveal .u-five-eighths-from-lap {
    width: 62.5%; }

  .reveal .u-six-eighths-from-lap {
    width: 75%; }

  .reveal .u-seven-eighths-from-lap {
    width: 87.5%; }

  .reveal .u-one-tenth-from-lap {
    width: 10%; }

  .reveal .u-two-tenths-from-lap {
    width: 20%; }

  .reveal .u-three-tenths-from-lap {
    width: 30%; }

  .reveal .u-four-tenths-from-lap {
    width: 40%; }

  .reveal .u-five-tenths-from-lap {
    width: 50%; }

  .reveal .u-six-tenths-from-lap {
    width: 60%; }

  .reveal .u-seven-tenths-from-lap {
    width: 70%; }

  .reveal .u-eight-tenths-from-lap {
    width: 80%; }

  .reveal .u-nine-tenths-from-lap {
    width: 90%; }

  .reveal .u-one-twelfth-from-lap {
    width: 8.33333%; }

  .reveal .u-two-twelfths-from-lap {
    width: 16.66667%; }

  .reveal .u-three-twelfths-from-lap {
    width: 25%; }

  .reveal .u-four-twelfths-from-lap {
    width: 33.33333%; }

  .reveal .u-five-twelfths-from-lap {
    width: 41.66667%; }

  .reveal .u-six-twelfths-from-lap {
    width: 50%; }

  .reveal .u-seven-twelfths-from-lap {
    width: 58.33333%; }

  .reveal .u-eight-twelfths-from-lap {
    width: 66.66667%; }

  .reveal .u-nine-twelfths-from-lap {
    width: 75%; }

  .reveal .u-ten-twelfths-from-lap {
    width: 83.33333%; }

  .reveal .u-eleven-twelfths-from-lap {
    width: 91.66667%; } }


#current-slide {width: 50%;}

#upcoming-slide,
#speaker-controls {width: 50%;}

.my-notes {
  background: black;
  padding: 10px;
  color: white;
}